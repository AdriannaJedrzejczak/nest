type Query {
  "retrieve all cats"
  getCats: [Cat]
  "retrieve a cat by its ID"
  getCat(id: ID!): Cat
}

type Mutation {
  "store a cat with its owners"
  createCat(createCatInput: CreateCatInput): Cat
  "define a person as coooool"
  setCool(id: ID!): Boolean
}

type Subscription {
  catChanged: Cat
  personChanged: Person
  coolChanged: Cool
}

"""
An epic creature that will shoot fire at you if you get near it.
"""
type Cat {
  id: Int
  name: String!
  age: Int
  owners: [Person]
  cool: Boolean
}

"People living with a cat"
type Person {
  id: Int
  catId: Int!
  name: String!
  cool: Boolean
}

input CreateCatInput {
  name: String!
  age: Int
  owners: [String!]!
  cool: Boolean
}

union Cool = Cat | Person
