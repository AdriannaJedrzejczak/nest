type Query {
  getCats: [Cat]
  getCat(id: ID!): Cat
}

type Mutation {
  createCat(createCatInput: CreateCatInput): Cat
  setCool(id: ID!): Boolean
}

type Subscription {
  catChanged: Cat
  personChanged: Person
  coolChanged: Cool
}

type Cat {
  id: Int
  name: String!
  age: Int
  owners: [Person]
  cool: Boolean
}

type Person {
  id: Int
  catId: Int!
  name: String!
  cool: Boolean
}

input CreateCatInput {
  name: String!
  age: Int
  owners: [String!]!
  cool: Boolean
}

union Cool = Cat | Person
